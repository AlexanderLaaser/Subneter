name: deploy-infra

#Stage Param setzen

on:
  workflow_dispatch:

  push:
  
  pull_request:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: "Printing Tenant ID"
        run: echo ${{ vars.ARM_TENANT_ID }}

      - name: "Install Terraform"
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: latest

      - name: "Install TFlint"
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format
        run: terraform fmt -check -recursive
      
      # Perform a security scan of the terraform code using checkov
      #- name: Run Checkov action
      #  id: checkov
      #  uses: bridgecrewio/checkov-action@master
      #  with: 
      #    framework: terraform
      
      - name: Terraform Plan
        id: tf-plan
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          
          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi
        
    # Save plan to artifacts  
      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: tfplan
      
      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
      
      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan
    
        # Terraform Apply
      - name: Terraform Apply
        run: terraform apply tfplan
          