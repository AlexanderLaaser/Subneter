name: Deploy Azure Infrastructure

on:
  workflow_dispatch:

  push:
    paths:
      - '**.tf'
      
  pull_request:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
  SA_BACKEND_NAME: sttfbackendsubneter
  TF_VAR_clientid: ${{ vars.ARM_CLIENT_ID }}

jobs:
  deploy-terraform:
    name: Deploy Azure Infrastructure with Terraform
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Install TFlint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Enable Storage Account Access
        run: |
          az storage account update --subscription ${{env.ARM_SUBSCRIPTION_ID}} --name ${{env.SA_BACKEND_NAME}} --public-network-access Enabled
   
      - name: Terraform Init
        run: terraform init
        working-directory: ./infrastructure/terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./infrastructure/terraform

      - name: Terraform Format
        run: terraform fmt -check -recursive
        working-directory: ./infrastructure/terraform
      
      #- name: Run Checkov action
      #  id: checkov
      #  uses: bridgecrewio/checkov-action@master
      #  with: 
      #    framework: terraform
      
      - name: Terraform Plan
        id: tf-plan
        run: terraform plan -out plan.infra
        working-directory: ./infrastructure/terraform
         
      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: tfplan
          path: ./infrastructure/terraform/plan.infra
      
      - name: Download Terraform Plan
        uses: actions/download-artifact@v3
        with:
          name: tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve plan.infra
        working-directory: ./infrastructure/terraform
          
      - name: Disable Storage Account Access
        run: |
          az storage account update --subscription ${{env.ARM_SUBSCRIPTION_ID}} --name ${{env.SA_BACKEND_NAME}} --public-network-access Disabled
  
  deploy-argo-cd:
      name: Install Argo CD on Kubernetes
      needs: deploy-terraform
      runs-on: ubuntu-latest
      environment: development
      steps:
        - uses: actions/checkout@v4
        - name: Install kubectl
          uses: azure/setup-kubectl@v1
        - name: Login to Azure (Kubernetes Context Setup)
          uses: azure/aks-set-context@v1
          with:
            creds: ${{ toJson(secrets.AZURE_CREDENTIALS) }}
            cluster-name: ${{ vars.AZURE_AKS_NAME }}
            resource-group: ${{ vars.AZURE_AKS_RG_NAME }}
        - name: Install Argo CD
          run: |
            kubectl create namespace argocd || true
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        - name: Validate Argo CD Installation
          run: kubectl rollout status deployment/argocd-server -n argocd